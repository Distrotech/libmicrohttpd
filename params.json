{"name":"Libmicrohttpd","tagline":"Mirror of https://gnunet.org/svn/libmicrohttpd","body":"About\r\n=====\r\n\r\nlibmicrohttpd is a GNU library (part of the GNU project) written in C\r\nthat provides a compact API and implementation of an HTTP 1.1 web\r\nserver (HTTP 1.0 is also supported).  libmicrohttpd only implements\r\nthe HTTP 1.1 protocol.  The main application must still provide the\r\ncontent.\r\n\r\n\r\nInstallation\r\n============\r\n\r\nIf you are using Subversion, run \"autoreconf -fi\" to create configure.\r\n\r\nIn order to run the testcases, you need a recent version of libcurl.\r\nlibcurl is not required if you just want to install the library.\r\n\r\nEspecially for development, do use the MHD_USE_DEBUG option to get\r\nerror messages.\r\n\r\n\r\nConfigure options\r\n=================\r\n\r\n\r\nIf you are concerned about space, you should set \"CFLAGS\" to \"-Os\r\n-fomit-frame-pointer\" to have gcc generate tight code.\r\n\r\nYou can use the following options to disable certain MHD features:\r\n\r\n--disable-https: no HTTPS / TLS / SSL support (significant reduction)\r\n--disable-messages: no error messages (they take space!)\r\n--disable-postprocessor: no MHD_PostProcessor API\r\n--disable-dauth: no digest authentication API\r\n\r\nThe resulting binary should be about 30-40k depending on the platform.\r\n\r\n\r\nPortability\r\n===========\r\n\r\nThe latest version of libmicrohttpd will try to avoid SIGPIPE on its\r\nsockets.  This should work on OS X, Linux and recent BSD systems (at\r\nleast).  On other systems that may trigger a SIGPIPE on send/recv, the\r\nmain application should install a signal handler to handle SIGPIPE.\r\n\r\nlibmicrohttpd should work well on GNU/Linux, BSD, OS X, W32 and z/OS.\r\nNote that HTTPS is not supported on z/OS (yet).  We also have reports\r\nof users using it on vxWorks and Symbian.  Note that on platforms\r\nwhere the compiler does not support the \"constructor\" attribute, you\r\nmust call \"MHD_init\" before using any MHD functions and \"MHD_fini\"\r\nafter you are done using MHD.\r\n\r\n\r\nNotes on compiling on z/OS:\r\n---------------------------\r\n\r\nAfter extracting the archive, run\r\n\r\niconv -f UTF-8 -t IBM-1047 contrib/ascebc > /tmp/ascebc.sh\r\nchmod +x /tmp/ascebc.sh\r\nfor n in `find * -type f`\r\ndo\r\n  /tmp/ascebc.sh $n\r\ndone\r\n\r\nto convert all source files to EBCDIC.  Note that you must run\r\n\"configure\" from the directory where the configure script is\r\nlocated.   Otherwise, configure will fail to find the\r\n\"contrib/xcc\" script (which is a wrapper around the z/OS c89\r\ncompiler).\r\n\r\n\r\nDevelopment Status\r\n==================\r\n\r\nThis is a beta release.  Below we list things that should be\r\nimplemented (in order of importance) before we can claim to be\r\nreasonably complete.\r\n\r\n\r\nUntested features:\r\n==================\r\n- add testcases for http/1.1 pipelining (need\r\n  to figure out how to ensure curl pipelines \r\n  -- and it seems libcurl has issues with pipelining, \r\n  see http://curl.haxx.se/mail/lib-2007-12/0248.html)\r\n- add testcases for resource limit enforcement\r\n- add testcases for client queuing early response,\r\n  suppressing 100 CONTINUE\r\n- extend testcase for chunked encoding to validate\r\n  handling of footers\r\n- more testing for SSL support\r\n- MHD basic and digest authentication\r\n\r\n\r\nFunctions not covered by \"make check\":\r\n======================================\r\n- mhd_panic_std (daemon.c); special case (abort)\r\n- parse_options (daemon.c)\r\n- MHD_set_panic_func (daemon.c)\r\n- MHD_get_version (daemon.c)\r\n\r\n\r\nMissing documentation:\r\n======================\r\n\r\n- manual:\r\n  * document configuration options\r\n  * document details on porting MHD (plibc, z/OS)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}